mutate(zn_t = zn,
indus_t = indus,
chas_t=chas,
nox_t=nox,
rm_t=rm,
age_t=age,
dis_t=dis,
rad_t=rad,
tax_t=tax,
ptratio_t=ptratio,
lstat_t=lstat,
medv_t=medv,
target_t=target)
test%>%
select('indus_t')
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(GGally)
library(Hmisc)
library(corrplot)
library(PerformanceAnalytics)
library(scales)
library(MASS)
library(xtable)
library(kableExtra)
library(reactable)
library(stargazer)
library(pander)
#df_merged<-
# Add new columns and rename them
test <- data_scaled %>%
mutate(zn_t = zn,
indus_t = indus,
chas_t=chas,
nox_t=nox,
rm_t=rm,
age_t=age,
dis_t=dis,
rad_t=rad,
tax_t=tax,
ptratio_t=ptratio,
lstat_t=lstat,
medv_t=medv,
target_t=target)
#test%>%
#  select('indus_t')
# Display the updated dataframe
#print(df)
test<-test%>%
select('indus_t')
View(test)
test<-test%>%
select(zn)
#df_merged<-
# Add new columns and rename them
test <- data_scaled %>%
mutate(zn_t = zn,
indus_t = indus,
chas_t=chas,
nox_t=nox,
rm_t=rm,
age_t=age,
dis_t=dis,
rad_t=rad,
tax_t=tax,
ptratio_t=ptratio,
lstat_t=lstat,
medv_t=medv,
target_t=target)
test<-test%>%
dplyr::select(zn)
# Display the updated dataframe
#print(df)
#df_merged<-
# Add new columns and rename them
test <- data_scaled %>%
mutate(zn_t = zn,
indus_t = indus,
chas_t=chas,
nox_t=nox,
rm_t=rm,
age_t=age,
dis_t=dis,
rad_t=rad,
tax_t=tax,
ptratio_t=ptratio,
lstat_t=lstat,
medv_t=medv,
target_t=target)%>%
dplyr::select(ends_with("_dt"))
# Display the updated dataframe
#print(df)
View(test)
#df_merged<-
# Add new columns and rename them
(test <- data_scaled %>%
mutate(zn_t = zn,
indus_t = indus,
chas_t=chas,
nox_t=nox,
rm_t=rm,
age_t=age,
dis_t=dis,
rad_t=rad,
tax_t=tax,
ptratio_t=ptratio,
lstat_t=lstat,
medv_t=medv,
target_t=target))%>%
dplyr::select(ends_with("_dt"))
# Display the updated dataframe
#print(df)
# Add new columns and rename them
test<-(test <- data_scaled %>%
mutate(zn_t = zn,
indus_t = indus,
chas_t=chas,
nox_t=nox,
rm_t=rm,
age_t=age,
dis_t=dis,
rad_t=rad,
tax_t=tax,
ptratio_t=ptratio,
lstat_t=lstat,
medv_t=medv,
target_t=target))%>%
dplyr::select(ends_with("_dt"))
dplyr::select(ends_with("_dt"))
# Add new columns and rename them
(test <- data_scaled %>%
mutate(zn_t = zn,
indus_t = indus,
chas_t=chas,
nox_t=nox,
rm_t=rm,
age_t=age,
dis_t=dis,
rad_t=rad,
tax_t=tax,
ptratio_t=ptratio,
lstat_t=lstat,
medv_t=medv,
target_t=target))%>%
dplyr::select(ends_with("_dt"))
# Add new columns and rename them
(test <- data_scaled %>%
mutate(zn_t = zn,
indus_t = indus,
chas_t=chas,
nox_t=nox,
rm_t=rm,
age_t=age,
dis_t=dis,
rad_t=rad,
tax_t=tax,
ptratio_t=ptratio,
lstat_t=lstat,
medv_t=medv,
target_t=target))%>%
dplyr::select(ends_with("_t"))
#df_merged<-
# Add new columns and rename them
test2<-bind_cols(df_crime_train,(test <- data_scaled %>%
mutate(zn_t = zn,
indus_t = indus,
chas_t=chas,
nox_t=nox,
rm_t=rm,
age_t=age,
dis_t=dis,
rad_t=rad,
tax_t=tax,
ptratio_t=ptratio,
lstat_t=lstat,
medv_t=medv,
target_t=target))%>%
dplyr::select(ends_with("_t")))
# Display the updated dataframe
#print(df)
View(test2)
#df_merged<-
# Add new columns and rename them
test<-bind_cols(df_crime_train,(test <- data_scaled %>%
mutate(zn_t = zn,
indus_t = indus,
chas_t=chas,
nox_t=nox,
rm_t=rm,
age_t=age,
dis_t=dis,
rad_t=rad,
tax_t=tax,
ptratio_t=ptratio,
lstat_t=lstat,
medv_t=medv,
target_t=target))%>%
dplyr::select(ends_with("_t")))
# Display the updated dataframe
#print(df)
View(test)
#df_merged<-
# Add new columns and rename them
test<-(bind_cols(df_crime_train,
(test <- data_scaled %>%
mutate(zn_t = zn,indus_t = indus,chas_t=chas,nox_t=nox,
rm_t=rm,age_t=age,dis_t=dis,rad_t=rad,tax_t=tax,
ptratio_t=ptratio,lstat_t=lstat,medv_t=medv,
target_t=target))%>%dplyr::select(ends_with("_t"))
)%>%
dplyr::select(zn)
)
# Display the updated dataframe
#print(df)
View(test)
#df_merged<-
# Add new columns and rename them
test<-(bind_cols(df_crime_train,
(test <- data_scaled %>%
mutate(zn_t = zn,indus_t = indus,chas_t=chas,nox_t=nox,
rm_t=rm,age_t=age,dis_t=dis,rad_t=rad,tax_t=tax,
ptratio_t=ptratio,lstat_t=lstat,medv_t=medv,
target_t=target))%>%dplyr::select(ends_with("_t"))
)%>%
dplyr::select(zn,zn_t,indus,indus_t,chas,chas_t,nox,nox_t,rm,rm_t,
age,age_t,dis,dis_t,rad,rad_t,tax,tax_t,ptratio,
ptratio_t,lstat,lstat_t,medv,medv_t,target,target_t)
)
# Display the updated dataframe
#print(df)
View(test)
#df_merged<-
# Add new columns and rename them
df_merged<-(bind_cols(df_crime_train,
(df_merged <- data_scaled %>%
mutate(zn_t = zn,indus_t = indus,chas_t=chas,nox_t=nox,
rm_t=rm,age_t=age,dis_t=dis,rad_t=rad,tax_t=tax,
ptratio_t=ptratio,lstat_t=lstat,medv_t=medv,
target_t=target))%>%dplyr::select(ends_with("_t"))
)%>%
dplyr::select(zn,zn_t,indus,indus_t,chas,chas_t,nox,nox_t,rm,rm_t,
age,age_t,dis,dis_t,rad,rad_t,tax,tax_t,ptratio,
ptratio_t,lstat,lstat_t,medv,medv_t,target,target_t)
)
# Display the updated dataframe
#print(df)
View(df_merged)
#df_merged<-
# Add new columns and rename them
df_merged<-(bind_cols(df_crime_train,
(df_merged <- data_scaled %>%
mutate(zn_t = zn,indus_t = indus,chas_t=chas,nox_t=nox,
rm_t=rm,age_t=age,dis_t=dis,rad_t=rad,tax_t=tax,
ptratio_t=ptratio,lstat_t=lstat,medv_t=medv,
target_t=target))%>%dplyr::select(ends_with("_t"))
)%>%
dplyr::select(zn,zn_t,indus,indus_t,chas,chas_t,nox,nox_t,rm,rm_t,
age,age_t,dis,dis_t,rad,rad_t,tax,tax_t,ptratio,
ptratio_t,lstat,lstat_t,medv,medv_t,target,target_t)
)
# Display the updated dataframe
df_merged%>%
kable()%>%
kable_styling()
(xtabs(~ target + medv ,  data = df_crime_train))
# Add new columns and rename them
df_merged<-(bind_cols(df_crime_train,
(df_merged <- data_scaled %>%
mutate(zn_t = zn,indus_t = indus,chas_t=chas,nox_t=nox,
rm_t=rm,age_t=age,dis_t=dis,rad_t=rad,tax_t=tax,
ptratio_t=ptratio,lstat_t=lstat,medv_t=medv,
target_t=target))%>%dplyr::select(ends_with("_t"))
)%>%
dplyr::select(zn,zn_t,indus,indus_t,chas,chas_t,nox,nox_t,rm,rm_t,
age,age_t,dis,dis_t,rad,rad_t,tax,tax_t,ptratio,
ptratio_t,lstat,lstat_t,medv,medv_t,target,target_t)
)
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(GGally)
library(Hmisc)
library(corrplot)
library(PerformanceAnalytics)
library(scales)
library(MASS)
library(xtable)
library(kableExtra)
library(reactable)
library(stargazer)
library(pander)
git_url<-
"https://raw.githubusercontent.com/GitableGabe/Data621_Data/main/"
df_crime_eval <-
read.csv(paste0(git_url,"crime-evaluation-data_modified.csv"))
head(df_crime_eval,10)%>%
kable(format = "latex",
booktabs = TRUE,
longtable = TRUE,
linesep = "",
align = "l",
#col.names = linebreak(column_names, align = "l"),
escape = FALSE)%>%
kable_styling(position = "left",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
df_crime_train <-
read.csv(paste0(git_url,"crime-training-data_modified.csv"))
head(df_crime_train,10)%>%
kable(format = "latex",
booktabs = TRUE,
longtable = TRUE,
linesep = "",
align = "l",
#col.names = linebreak(column_names, align = "l"),
escape = FALSE)%>%
kable_styling(position = "left",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
df_crime_eval[is.na(df_crime_eval)]
df_crime_train[is.na(df_crime_train)]
summary(df_crime_eval)
summary(df_crime_train)
str(df_crime_train)
(xtabs(~ target + medv ,  data = df_crime_train))
# Create a correlation matrix for all variables
(cor_matrix <- cor(df_crime_train))
#Don't use this
#df_crime_train$chas <- as.factor(df_crime_train$chas)
#df_crime_train$rad <- as.factor(df_crime_train$rad)
#df_crime_train$target <- as.factor(df_crime_train$target)
str(df_crime_train)
model_1 <- glm(formula = target ~ ., family = binomial, data = df_crime_train)
summary(model_1)
# Gather the data into a long format
data_long <- gather(df_crime_train, key = "Variable", value = "Value")
ggplot(data_long, aes(x = Value)) +
geom_histogram() +
facet_wrap(~Variable, scales = "free") +
labs(title = "Histogram of Variables")
# Apply min-max scaling to all three variables
data_scaled <- df_crime_train
data_scaled[] <- lapply(df_crime_train, rescale)
# Gather the data into a long format
data_long_scaled <- gather(data_scaled, key = "Variable", value = "Value")
ggplot(data_long_scaled, aes(x = Value)) +
geom_histogram() +
facet_wrap(~Variable, scales = "free") +
labs(title = "Histogram of Variables")
# Add new columns and rename them
df_merged<-(bind_cols(df_crime_train,
(df_merged <- data_scaled %>%
mutate(zn_t = zn,indus_t = indus,chas_t=chas,nox_t=nox,
rm_t=rm,age_t=age,dis_t=dis,rad_t=rad,tax_t=tax,
ptratio_t=ptratio,lstat_t=lstat,medv_t=medv,
target_t=target))%>%dplyr::select(ends_with("_t"))
)%>%
dplyr::select(zn,zn_t,indus,indus_t,chas,chas_t,nox,nox_t,rm,rm_t,
age,age_t,dis,dis_t,rad,rad_t,tax,tax_t,ptratio,
ptratio_t,lstat,lstat_t,medv,medv_t,target,target_t)
)
# Display the updated dataframe
df_merged%>%
kable()%>%
kable_styling()
col_new2 <- ifelse(col_list==0, log(col_list), (col_list^lambda_col - 1) / lambda_col)
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(GGally)
library(Hmisc)
library(corrplot)
library(PerformanceAnalytics)
library(scales)
library(MASS)
library(xtable)
library(kableExtra)
library(reactable)
library(stargazer)
library(pander)
git_url<-
"https://raw.githubusercontent.com/GitableGabe/Data621_Data/main/"
df_crime_eval <-
read.csv(paste0(git_url,"crime-evaluation-data_modified.csv"))
head(df_crime_eval,10)%>%
kable(format = "latex",
booktabs = TRUE,
longtable = TRUE,
linesep = "",
align = "l",
#col.names = linebreak(column_names, align = "l"),
escape = FALSE)%>%
kable_styling(position = "left",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
df_crime_train <-
read.csv(paste0(git_url,"crime-training-data_modified.csv"))
head(df_crime_train,10)%>%
kable(format = "latex",
booktabs = TRUE,
longtable = TRUE,
linesep = "",
align = "l",
#col.names = linebreak(column_names, align = "l"),
escape = FALSE)%>%
kable_styling(position = "left",
latex_options = c("striped", "repeat_header"),
stripe_color = "gray!15")
df_crime_eval[is.na(df_crime_eval)]
df_crime_train[is.na(df_crime_train)]
summary(df_crime_eval)
summary(df_crime_train)
str(df_crime_train)
(xtabs(~ target + medv ,  data = df_crime_train))
# Create a correlation matrix for all variables
(cor_matrix <- cor(df_crime_train))
#Don't use this
#df_crime_train$chas <- as.factor(df_crime_train$chas)
#df_crime_train$rad <- as.factor(df_crime_train$rad)
#df_crime_train$target <- as.factor(df_crime_train$target)
str(df_crime_train)
model_1 <- glm(formula = target ~ ., family = binomial, data = df_crime_train)
summary(model_1)
# Gather the data into a long format
data_long <- gather(df_crime_train, key = "Variable", value = "Value")
ggplot(data_long, aes(x = Value)) +
geom_histogram() +
facet_wrap(~Variable, scales = "free") +
labs(title = "Histogram of Variables")
# Apply min-max scaling to all three variables
data_scaled <- df_crime_train
data_scaled[] <- lapply(df_crime_train, rescale)
# Gather the data into a long format
data_long_scaled <- gather(data_scaled, key = "Variable", value = "Value")
ggplot(data_long_scaled, aes(x = Value)) +
geom_histogram() +
facet_wrap(~Variable, scales = "free") +
labs(title = "Histogram of Variables")
# Add new columns and rename them
df_merged<-(bind_cols(df_crime_train,
(df_merged <- data_scaled %>%
mutate(zn_t = zn,indus_t = indus,chas_t=chas,nox_t=nox,
rm_t=rm,age_t=age,dis_t=dis,rad_t=rad,tax_t=tax,
ptratio_t=ptratio,lstat_t=lstat,medv_t=medv,
target_t=target))%>%dplyr::select(ends_with("_t"))
)%>%
dplyr::select(zn,zn_t,indus,indus_t,chas,chas_t,nox,nox_t,rm,rm_t,
age,age_t,dis,dis_t,rad,rad_t,tax,tax_t,ptratio,
ptratio_t,lstat,lstat_t,medv,medv_t,target,target_t)
)
# Display the updated dataframe
df_merged%>%
kable()%>%
kable_styling()
# Create a correlation matrix for all variables
(cor_matrix <- cor(data_scaled))
model_2 <- glm(formula = target ~ ., family = binomial, data = data_scaled)
(summary=(model_2))
df_crime_train$age <- as.numeric(df_crime_train$age)
# Convert a DataFrame column to a list
age_list <- as.numeric(as.list(df_crime_train$age))
#find optimal lambda for Box-Cox transformation
bc <- boxcox(age_list~ 1, lambda = seq(-2,2,0.1))
lambda <- bc$x[which.max(bc$y)]
# Apply the Box-Cox transformation
age_new = (age_list^lambda-1)/lambda
hist(age_new)
hist(df_crime_train$age)
# Convert a DataFrame column to a list
dis_list <- as.numeric(as.list(df_crime_train$dis))
#find optimal lambda for Box-Cox transformation
bc <- boxcox(dis_list~ 1, lambda = seq(-2,2,0.1))
lambda_dis <- bc$x[which.max(bc$y)]
# Apply the Box-Cox transformation
dis_new = (dis_list^lambda_dis-1)/lambda_dis
hist(dis_new)
hist(df_crime_train$dis)
# Convert a DataFrame column to a list
indus_list <- as.numeric(as.list(df_crime_train$indus))
#find optimal lambda for Box-Cox transformation
bc <- boxcox(indus_list~ 1, lambda = seq(-2,2,0.1))
lambda_indus <- bc$x[which.max(bc$y)]
# Apply the Box-Cox transformation
indus_new = (indus_list^lambda_indus-1)/lambda_indus
hist(indus_new )
hist(df_crime_train$indus)
# Create an empty list to store the transformed columns
transformed_columns <- list()
# Define the names of columns to exclude from transformation because there variables response must be positive
exclude_columns <- c("target", "zn", "chas")
# Iterate through the columns in df_crime_train
for (col_name in names(df_crime_train)) {
# Convert the column to a list and check if it's numeric and not in the exclude list
if (is.numeric(df_crime_train[[col_name]]) && !(col_name %in% exclude_columns)) {
col_list <- as.numeric(as.list(df_crime_train[[col_name]]))
# Find optimal lambda for Box-Cox transformation
bc <- boxcox(col_list ~ 1, lambda = seq(-2, 2, 0.1))
lambda_col <- bc$x[which.max(bc$y)]
# Apply the Box-Cox transformation
col_new <- (col_list^lambda_col - 1) / lambda_col
# Store the transformed column in the list
transformed_columns[[col_name]] <- col_new
}
}
# Convert the list of transformed columns into a DataFrame
df_transformed <- as.data.frame(transformed_columns)
col_new2 <- ifelse(col_list==0, log(col_list), (col_list^lambda_col - 1) / lambda_col)
as.data.frame(col_new2)
