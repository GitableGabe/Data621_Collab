tabl <- "
| Variable Names         | Definition    					   	 | Theoretical Effect  	   |
|------------------------|:-------------------------------------:|------------------------:|
| INDEX 			     | Identification Variable (do not use)  | None 				   |
| TARGET_WINS 	         | Number of wins |   $12 			     |  					   |
| TEAM_BATTING_H 	     | Base Hits by batters (1B,2B,3B,HR)    | Positive Impact on Wins |
| TEAM_BATTING_2B 	     | Doubles by batters (2B) 				 | Positive Impact on Wins |
| TEAM_BATTING_3B 	     | Triples by batters (3B) 				 | Positive Impact on Wins |
| TEAM_BATTING_HR 	     | Homeruns by batters (4B) 			 | Positive Impact on Wins |
| TEAM_BATTING_BB 	     | Walks by batters 					 | Positive Impact on Wins |
| TEAM_BATTING_HBP	     | Batters hit by pitch (get a free base)| Positive Impact on Wins |
| TEAM_BATTING_SO 	     | Strikeouts by batters 				 | Negative Impact on Wins |
| TEAM_BASERUN_SB 	     | Stolen bases 						 | Positive Impact on Wins |
| TEAM_BASERUN_CS 	     | Caught stealing 						 | Negative Impact on Wins |
| TEAM_FIELDING_E 	     | Errors 								 | Negative Impact on Wins |
| TEAM_FIELDING_DP	     | Double Plays 						 | Positive Impact on Wins |
| TEAM_PITCHING_BB	     | Walks allowed 						 | Negative Impact on Wins |
| TEAM_PITCHING_H 	     | Hits allowed 						 | Negative Impact on Wins |
| TEAM_PITCHING_HR	     | Homeruns allowed 					 | Negative Impact on Wins |
| TEAM_PITCHING_SO	     | Strikeouts by pitchers 			 	 | Positive Impact on Wins |
"
cat(tabl) # output the table in a format good for HTML/PDF/docx conversion
library(skimr)
library(dplyr)
url_train<-
"https://raw.githubusercontent.com/melbow2424/Data621_HW1/main/"+
"moneyball-training-data.csv"
tabl <- "
| Variable Names         | Definition    					   	 | Theoretical Effect  	   |
|------------------------|:-------------------------------------:|------------------------:|
| INDEX 			     | Identification Variable (do not use)  | None 				   |
| TARGET_WINS 	         | Number of wins |   $12 			     |  					   |
| TEAM_BATTING_H 	     | Base Hits by batters (1B,2B,3B,HR)    | Positive Impact on Wins |
| TEAM_BATTING_2B 	     | Doubles by batters (2B) 				 | Positive Impact on Wins |
| TEAM_BATTING_3B 	     | Triples by batters (3B) 				 | Positive Impact on Wins |
| TEAM_BATTING_HR 	     | Homeruns by batters (4B) 			 | Positive Impact on Wins |
| TEAM_BATTING_BB 	     | Walks by batters 					 | Positive Impact on Wins |
| TEAM_BATTING_HBP	     | Batters hit by pitch (get a free base)| Positive Impact on Wins |
| TEAM_BATTING_SO 	     | Strikeouts by batters 				 | Negative Impact on Wins |
| TEAM_BASERUN_SB 	     | Stolen bases 						 | Positive Impact on Wins |
| TEAM_BASERUN_CS 	     | Caught stealing 						 | Negative Impact on Wins |
| TEAM_FIELDING_E 	     | Errors 								 | Negative Impact on Wins |
| TEAM_FIELDING_DP	     | Double Plays 						 | Positive Impact on Wins |
| TEAM_PITCHING_BB	     | Walks allowed 						 | Negative Impact on Wins |
| TEAM_PITCHING_H 	     | Hits allowed 						 | Negative Impact on Wins |
| TEAM_PITCHING_HR	     | Homeruns allowed 					 | Negative Impact on Wins |
| TEAM_PITCHING_SO	     | Strikeouts by pitchers 			 	 | Positive Impact on Wins |
"
cat(tabl) # output the table in a format good for HTML/PDF/docx conversion
library(skimr)
library(dplyr)
url_git<-
"https://raw.githubusercontent.com/melbow2424/Data621_HW1/main/"
df_train <-
read.csv(paste0(url_git,"moneyball-training-data.csv"))
df_evaluation <- read.csv("https://raw.githubusercontent.com/melbow2424/Data621_HW1/main/moneyball-evaluation-data.csv")
View(df_evaluation)
tabl <- "
| Variable Names         | Definition    					   	 | Theoretical Effect  	   |
|------------------------|:-------------------------------------:|------------------------:|
| INDEX 			     | Identification Variable (do not use)  | None 				   |
| TARGET_WINS 	         | Number of wins |   $12 			     |  					   |
| TEAM_BATTING_H 	     | Base Hits by batters (1B,2B,3B,HR)    | Positive Impact on Wins |
| TEAM_BATTING_2B 	     | Doubles by batters (2B) 				 | Positive Impact on Wins |
| TEAM_BATTING_3B 	     | Triples by batters (3B) 				 | Positive Impact on Wins |
| TEAM_BATTING_HR 	     | Homeruns by batters (4B) 			 | Positive Impact on Wins |
| TEAM_BATTING_BB 	     | Walks by batters 					 | Positive Impact on Wins |
| TEAM_BATTING_HBP	     | Batters hit by pitch (get a free base)| Positive Impact on Wins |
| TEAM_BATTING_SO 	     | Strikeouts by batters 				 | Negative Impact on Wins |
| TEAM_BASERUN_SB 	     | Stolen bases 						 | Positive Impact on Wins |
| TEAM_BASERUN_CS 	     | Caught stealing 						 | Negative Impact on Wins |
| TEAM_FIELDING_E 	     | Errors 								 | Negative Impact on Wins |
| TEAM_FIELDING_DP	     | Double Plays 						 | Positive Impact on Wins |
| TEAM_PITCHING_BB	     | Walks allowed 						 | Negative Impact on Wins |
| TEAM_PITCHING_H 	     | Hits allowed 						 | Negative Impact on Wins |
| TEAM_PITCHING_HR	     | Homeruns allowed 					 | Negative Impact on Wins |
| TEAM_PITCHING_SO	     | Strikeouts by pitchers 			 	 | Positive Impact on Wins |
"
cat(tabl) # output the table in a format good for HTML/PDF/docx conversion
library(skimr)
library(dplyr)
url_git<-
"https://raw.githubusercontent.com/melbow2424/Data621_HW1/main/"
df_train <-
read.csv(paste0(url_git,"moneyball-training-data.csv"))
df_evaluation <- read.csv("https://raw.githubusercontent.com/melbow2424/Data621_HW1/main/moneyball-evaluation-data.csv")
library(skimr)
library(dplyr)
library(kableExtra)
kable(skim(df_train))
library(skimr)
library(dplyr)
library(kableExtra)
tabl <- "
| Variable Names         | Definition    					   	 | Theoretical Effect  	   |
|------------------------|:-------------------------------------:|------------------------:|
| INDEX 			     | Identification Variable (do not use)  | None 				   |
| TARGET_WINS 	         | Number of wins |   $12 			     |  					   |
| TEAM_BATTING_H 	     | Base Hits by batters (1B,2B,3B,HR)    | Positive Impact on Wins |
| TEAM_BATTING_2B 	     | Doubles by batters (2B) 				 | Positive Impact on Wins |
| TEAM_BATTING_3B 	     | Triples by batters (3B) 				 | Positive Impact on Wins |
| TEAM_BATTING_HR 	     | Homeruns by batters (4B) 			 | Positive Impact on Wins |
| TEAM_BATTING_BB 	     | Walks by batters 					 | Positive Impact on Wins |
| TEAM_BATTING_HBP	     | Batters hit by pitch (get a free base)| Positive Impact on Wins |
| TEAM_BATTING_SO 	     | Strikeouts by batters 				 | Negative Impact on Wins |
| TEAM_BASERUN_SB 	     | Stolen bases 						 | Positive Impact on Wins |
| TEAM_BASERUN_CS 	     | Caught stealing 						 | Negative Impact on Wins |
| TEAM_FIELDING_E 	     | Errors 								 | Negative Impact on Wins |
| TEAM_FIELDING_DP	     | Double Plays 						 | Positive Impact on Wins |
| TEAM_PITCHING_BB	     | Walks allowed 						 | Negative Impact on Wins |
| TEAM_PITCHING_H 	     | Hits allowed 						 | Negative Impact on Wins |
| TEAM_PITCHING_HR	     | Homeruns allowed 					 | Negative Impact on Wins |
| TEAM_PITCHING_SO	     | Strikeouts by pitchers 			 	 | Positive Impact on Wins |
"
cat(tabl) # output the table in a format good for HTML/PDF/docx conversion
url_git<-
"https://raw.githubusercontent.com/melbow2424/Data621_HW1/main/"
df_train <-
read.csv(paste0(url_git,"moneyball-training-data.csv"))
df_evaluation <-
read.csv(paste0(url_git,"moneyball-evaluation-data.csv"))
skim(df_train)
library(skimr)
library(dplyr)
library(knitr)
# Set so that long lines in R will be wrapped:
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
tabl <- "
| Variable Names         | Definition    					   	 | Theoretical Effect  	   |
|------------------------|:-------------------------------------:|------------------------:|
| INDEX 			     | Identification Variable (do not use)  | None 				   |
| TARGET_WINS 	         | Number of wins |   $12 			     |  					   |
| TEAM_BATTING_H 	     | Base Hits by batters (1B,2B,3B,HR)    | Positive Impact on Wins |
| TEAM_BATTING_2B 	     | Doubles by batters (2B) 				 | Positive Impact on Wins |
| TEAM_BATTING_3B 	     | Triples by batters (3B) 				 | Positive Impact on Wins |
| TEAM_BATTING_HR 	     | Homeruns by batters (4B) 			 | Positive Impact on Wins |
| TEAM_BATTING_BB 	     | Walks by batters 					 | Positive Impact on Wins |
| TEAM_BATTING_HBP	     | Batters hit by pitch (get a free base)| Positive Impact on Wins |
| TEAM_BATTING_SO 	     | Strikeouts by batters 				 | Negative Impact on Wins |
| TEAM_BASERUN_SB 	     | Stolen bases 						 | Positive Impact on Wins |
| TEAM_BASERUN_CS 	     | Caught stealing 						 | Negative Impact on Wins |
| TEAM_FIELDING_E 	     | Errors 								 | Negative Impact on Wins |
| TEAM_FIELDING_DP	     | Double Plays 						 | Positive Impact on Wins |
| TEAM_PITCHING_BB	     | Walks allowed 						 | Negative Impact on Wins |
| TEAM_PITCHING_H 	     | Hits allowed 						 | Negative Impact on Wins |
| TEAM_PITCHING_HR	     | Homeruns allowed 					 | Negative Impact on Wins |
| TEAM_PITCHING_SO	     | Strikeouts by pitchers 			 	 | Positive Impact on Wins |
"
cat(tabl) # output the table in a format good for HTML/PDF/docx conversion
git_url<-
"https://raw.githubusercontent.com/melbow2424/Data621_HW1/main/"
df_train <-
read.csv(paste0(git_url,"moneyball-training-data.csv"))
df_evaluation <-
read.csv(paste0(git_url,"moneyball-evaluation-data.csv"))
print(skim(df_train))
train_means<-sapply(df_train, function(x) round(mean(x, na.rm = TRUE)))
train_means
train_medians<-sapply(df_train, function(x) round(median(x, na.rm = TRUE)))
train_medians
# Replace NA values in 'column_name' with 'mean'
df_train_mn <- df_train %>%
mutate(TEAM_BATTING_SO =
ifelse(is.na(TEAM_BATTING_SO),
train_means[8],TEAM_BATTING_SO))%>%
mutate(TEAM_BASERUN_SB =
ifelse(is.na(TEAM_BASERUN_SB),
train_means[9], TEAM_BASERUN_SB))%>%
mutate(TEAM_BASERUN_CS =
ifelse(is.na(TEAM_BASERUN_CS),
train_means[10], TEAM_BASERUN_CS))%>%
mutate(TEAM_BATTING_HBP =
ifelse(is.na(TEAM_BATTING_HBP),
train_means[11],TEAM_BATTING_HBP))%>%
mutate(TEAM_PITCHING_SO =
ifelse(is.na(TEAM_PITCHING_SO),
train_means[15], TEAM_PITCHING_SO))%>%
mutate(TEAM_FIELDING_DP =
ifelse(is.na(TEAM_FIELDING_DP),
train_means[17], TEAM_FIELDING_DP))
# Replace NA values in 'column_name' with 'median'
df_train_md <- df_train %>%
mutate(TEAM_BATTING_SO =
ifelse(is.na(TEAM_BATTING_SO),
train_medians[8],TEAM_BATTING_SO))%>%
mutate(TEAM_BASERUN_SB =
ifelse(is.na(TEAM_BASERUN_SB),
train_medians[9], TEAM_BASERUN_SB))%>%
mutate(TEAM_BASERUN_CS =
ifelse(is.na(TEAM_BASERUN_CS),
train_medians[10], TEAM_BASERUN_CS))%>%
mutate(TEAM_BATTING_HBP =
ifelse(is.na(TEAM_BATTING_HBP),
train_medians[11],TEAM_BATTING_HBP))%>%
mutate(TEAM_PITCHING_SO =
ifelse(is.na(TEAM_PITCHING_SO),
train_medians[15], TEAM_PITCHING_SO))%>%
mutate(TEAM_FIELDING_DP =
ifelse(is.na(TEAM_FIELDING_DP),
train_medians[17], TEAM_FIELDING_DP))
df_train_0 <- df_train %>% na_replace(0)
library(skimr)
library(dplyr)
library(knitr)
# Set so that long lines in R will be wrapped:
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
library(tidyr)
library(skimr)
library(dplyr)
library(knitr)
# Set so that long lines in R will be wrapped:
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
df_train_0 <- df_train %>% replace_na(0)
df_train_0 <- replace_na(df_train,0)
colnames(df_train)
df_train_0 <- df_train %>%
replace_na(list(
INDEX = 0,
TARGET_WINS = 0,
TEAM_BATTING_H = 0,
TEAM_BATTING_2B = 0,
TEAM_BATTING_3B = 0,
TEAM_BATTING_HR = 0,
TEAM_BATTING_BB = 0,
TEAM_BATTING_SO = 0,
TEAM_BASERUN_SB = 0,
TEAM_BASERUN_CS = 0,
TEAM_BATTING_HBP = 0,
TEAM_PITCHING_H = 0,
TEAM_PITCHING_HR = 0,
TEAM_PITCHING_BB = 0,
TEAM_PITCHING_SO = 0,
TEAM_FIELDING_E = 0,
TEAM_FIELDING_DP = 0
))
model_initial <- lm(TARGET_WINS ~ TEAM_BATTING_H+TEAM_BATTING_2B +TEAM_BATTING_3B+TEAM_BATTING_HR+TEAM_BATTING_BB+TEAM_BATTING_SO+
TEAM_BASERUN_SB+ TEAM_BASERUN_CS + TEAM_BATTING_HBP +TEAM_PITCHING_H+ TEAM_PITCHING_HR+TEAM_PITCHING_BB+TEAM_PITCHING_SO+TEAM_FIELDING_E+ TEAM_FIELDING_DP, data = df_train)
summary(model_initial)
df_train_rm<- na.omit(df_train)
library(tidyr)
library(skimr)
library(dplyr)
library(knitr)
# Set so that long lines in R will be wrapped:
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
tabl <- "
| Variable Names         | Definition    					   	 | Theoretical Effect  	   |
|------------------------|:-------------------------------------:|------------------------:|
| INDEX 			     | Identification Variable (do not use)  | None 				   |
| TARGET_WINS 	         | Number of wins |   $12 			     |  					   |
| TEAM_BATTING_H 	     | Base Hits by batters (1B,2B,3B,HR)    | Positive Impact on Wins |
| TEAM_BATTING_2B 	     | Doubles by batters (2B) 				 | Positive Impact on Wins |
| TEAM_BATTING_3B 	     | Triples by batters (3B) 				 | Positive Impact on Wins |
| TEAM_BATTING_HR 	     | Homeruns by batters (4B) 			 | Positive Impact on Wins |
| TEAM_BATTING_BB 	     | Walks by batters 					 | Positive Impact on Wins |
| TEAM_BATTING_HBP	     | Batters hit by pitch (get a free base)| Positive Impact on Wins |
| TEAM_BATTING_SO 	     | Strikeouts by batters 				 | Negative Impact on Wins |
| TEAM_BASERUN_SB 	     | Stolen bases 						 | Positive Impact on Wins |
| TEAM_BASERUN_CS 	     | Caught stealing 						 | Negative Impact on Wins |
| TEAM_FIELDING_E 	     | Errors 								 | Negative Impact on Wins |
| TEAM_FIELDING_DP	     | Double Plays 						 | Positive Impact on Wins |
| TEAM_PITCHING_BB	     | Walks allowed 						 | Negative Impact on Wins |
| TEAM_PITCHING_H 	     | Hits allowed 						 | Negative Impact on Wins |
| TEAM_PITCHING_HR	     | Homeruns allowed 					 | Negative Impact on Wins |
| TEAM_PITCHING_SO	     | Strikeouts by pitchers 			 	 | Positive Impact on Wins |
"
cat(tabl) # output the table in a format good for HTML/PDF/docx conversion
git_url<-
"https://raw.githubusercontent.com/melbow2424/Data621_HW1/main/"
df_train <-
read.csv(paste0(git_url,"moneyball-training-data.csv"))
df_evaluation <-
read.csv(paste0(git_url,"moneyball-evaluation-data.csv"))
print(skim(df_train))
train_means<-sapply(df_train, function(x) round(mean(x, na.rm = TRUE)))
train_means
eval_means<-sapply(df_evaluation, function(x) round(mean(x, na.rm = TRUE)))
eval_means
train_medians<-sapply(df_train, function(x) round(median(x, na.rm = TRUE)))
train_medians
eval_medians<-sapply(df_evaluation, function(x) round(median(x, na.rm = TRUE)))
eval_medians
library(tidyr)
library(skimr)
library(dplyr)
library(knitr)
# Set so that long lines in R will be wrapped:
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
tabl <- "
| Variable Names         | Definition    					   	 | Theoretical Effect  	   |
|------------------------|:-------------------------------------:|------------------------:|
| INDEX 			     | Identification Variable (do not use)  | None 				   |
| TARGET_WINS 	         | Number of wins |   $12 			     |  					   |
| TEAM_BATTING_H 	     | Base Hits by batters (1B,2B,3B,HR)    | Positive Impact on Wins |
| TEAM_BATTING_2B 	     | Doubles by batters (2B) 				 | Positive Impact on Wins |
| TEAM_BATTING_3B 	     | Triples by batters (3B) 				 | Positive Impact on Wins |
| TEAM_BATTING_HR 	     | Homeruns by batters (4B) 			 | Positive Impact on Wins |
| TEAM_BATTING_BB 	     | Walks by batters 					 | Positive Impact on Wins |
| TEAM_BATTING_HBP	     | Batters hit by pitch (get a free base)| Positive Impact on Wins |
| TEAM_BATTING_SO 	     | Strikeouts by batters 				 | Negative Impact on Wins |
| TEAM_BASERUN_SB 	     | Stolen bases 						 | Positive Impact on Wins |
| TEAM_BASERUN_CS 	     | Caught stealing 						 | Negative Impact on Wins |
| TEAM_FIELDING_E 	     | Errors 								 | Negative Impact on Wins |
| TEAM_FIELDING_DP	     | Double Plays 						 | Positive Impact on Wins |
| TEAM_PITCHING_BB	     | Walks allowed 						 | Negative Impact on Wins |
| TEAM_PITCHING_H 	     | Hits allowed 						 | Negative Impact on Wins |
| TEAM_PITCHING_HR	     | Homeruns allowed 					 | Negative Impact on Wins |
| TEAM_PITCHING_SO	     | Strikeouts by pitchers 			 	 | Positive Impact on Wins |
"
cat(tabl) # output the table in a format good for HTML/PDF/docx conversion
git_url<-
"https://raw.githubusercontent.com/melbow2424/Data621_HW1/main/"
df_train <-
read.csv(paste0(git_url,"moneyball-training-data.csv"))
df_evaluation <-
read.csv(paste0(git_url,"moneyball-evaluation-data.csv"))
print(skim(df_train))
train_means<-sapply(df_train, function(x) round(mean(x, na.rm = TRUE)))
train_means
eval_means<-sapply(df_evaluation, function(x) round(mean(x, na.rm = TRUE)))
eval_means
train_medians<-sapply(df_train, function(x) round(median(x, na.rm = TRUE)))
train_medians
eval_medians<-sapply(df_evaluation, function(x) round(median(x, na.rm = TRUE)))
eval_medians
# Replace NA values in 'column_name' with 'mean'
df_train_mn <- df_train %>%
mutate(TEAM_BATTING_SO =
ifelse(is.na(TEAM_BATTING_SO),
train_means[8],TEAM_BATTING_SO))%>%
mutate(TEAM_BASERUN_SB =
ifelse(is.na(TEAM_BASERUN_SB),
train_means[9], TEAM_BASERUN_SB))%>%
mutate(TEAM_BASERUN_CS =
ifelse(is.na(TEAM_BASERUN_CS),
train_means[10], TEAM_BASERUN_CS))%>%
mutate(TEAM_BATTING_HBP =
ifelse(is.na(TEAM_BATTING_HBP),
train_means[11],TEAM_BATTING_HBP))%>%
mutate(TEAM_PITCHING_SO =
ifelse(is.na(TEAM_PITCHING_SO),
train_means[15], TEAM_PITCHING_SO))%>%
mutate(TEAM_FIELDING_DP =
ifelse(is.na(TEAM_FIELDING_DP),
train_means[17], TEAM_FIELDING_DP))
df_evaluation_mn <- df_evaluation %>%
mutate(TEAM_BATTING_SO =
ifelse(is.na(TEAM_BATTING_SO),
eval_means[8],TEAM_BATTING_SO))%>%
mutate(TEAM_BASERUN_SB =
ifelse(is.na(TEAM_BASERUN_SB),
eval_means[9], TEAM_BASERUN_SB))%>%
mutate(TEAM_BASERUN_CS =
ifelse(is.na(TEAM_BASERUN_CS),
eval_means[10], TEAM_BASERUN_CS))%>%
mutate(TEAM_BATTING_HBP =
ifelse(is.na(TEAM_BATTING_HBP),
eval_means[11],TEAM_BATTING_HBP))%>%
mutate(TEAM_PITCHING_SO =
ifelse(is.na(TEAM_PITCHING_SO),
eval_means[15], TEAM_PITCHING_SO))%>%
mutate(TEAM_FIELDING_DP =
ifelse(is.na(TEAM_FIELDING_DP),
eval_means[17], TEAM_FIELDING_DP))
# Replace NA values in 'column_name' with 'median'
df_train_md <- df_train %>%
mutate(TEAM_BATTING_SO =
ifelse(is.na(TEAM_BATTING_SO),
train_medians[8],TEAM_BATTING_SO))%>%
mutate(TEAM_BASERUN_SB =
ifelse(is.na(TEAM_BASERUN_SB),
train_medians[9], TEAM_BASERUN_SB))%>%
mutate(TEAM_BASERUN_CS =
ifelse(is.na(TEAM_BASERUN_CS),
train_medians[10], TEAM_BASERUN_CS))%>%
mutate(TEAM_BATTING_HBP =
ifelse(is.na(TEAM_BATTING_HBP),
train_medians[11],TEAM_BATTING_HBP))%>%
mutate(TEAM_PITCHING_SO =
ifelse(is.na(TEAM_PITCHING_SO),
train_medians[15], TEAM_PITCHING_SO))%>%
mutate(TEAM_FIELDING_DP =
ifelse(is.na(TEAM_FIELDING_DP),
train_medians[17], TEAM_FIELDING_DP))
df_evaluation_md <- df_evaluation %>%
mutate(TEAM_BATTING_SO =
ifelse(is.na(TEAM_BATTING_SO),
eval_medians[8],TEAM_BATTING_SO))%>%
mutate(TEAM_BASERUN_SB =
ifelse(is.na(TEAM_BASERUN_SB),
eval_medians[9], TEAM_BASERUN_SB))%>%
mutate(TEAM_BASERUN_CS =
ifelse(is.na(TEAM_BASERUN_CS),
eval_medians[10], TEAM_BASERUN_CS))%>%
mutate(TEAM_BATTING_HBP =
ifelse(is.na(TEAM_BATTING_HBP),
eval_medians[11],TEAM_BATTING_HBP))%>%
mutate(TEAM_PITCHING_SO =
ifelse(is.na(TEAM_PITCHING_SO),
eval_medians[15], TEAM_PITCHING_SO))%>%
mutate(TEAM_FIELDING_DP =
ifelse(is.na(TEAM_FIELDING_DP),
eval_medians[17], TEAM_FIELDING_DP))
df_train_0 <- df_train %>%
replace_na(list(
INDEX = 0,
TARGET_WINS = 0,
TEAM_BATTING_H = 0,
TEAM_BATTING_2B = 0,
TEAM_BATTING_3B = 0,
TEAM_BATTING_HR = 0,
TEAM_BATTING_BB = 0,
TEAM_BATTING_SO = 0,
TEAM_BASERUN_SB = 0,
TEAM_BASERUN_CS = 0,
TEAM_BATTING_HBP = 0,
TEAM_PITCHING_H = 0,
TEAM_PITCHING_HR = 0,
TEAM_PITCHING_BB = 0,
TEAM_PITCHING_SO = 0,
TEAM_FIELDING_E = 0,
TEAM_FIELDING_DP = 0
))
df_evaluation_0 <- df_evaluation %>%
replace_na(list(
INDEX = 0,
TARGET_WINS = 0,
TEAM_BATTING_H = 0,
TEAM_BATTING_2B = 0,
TEAM_BATTING_3B = 0,
TEAM_BATTING_HR = 0,
TEAM_BATTING_BB = 0,
TEAM_BATTING_SO = 0,
TEAM_BASERUN_SB = 0,
TEAM_BASERUN_CS = 0,
TEAM_BATTING_HBP = 0,
TEAM_PITCHING_H = 0,
TEAM_PITCHING_HR = 0,
TEAM_PITCHING_BB = 0,
TEAM_PITCHING_SO = 0,
TEAM_FIELDING_E = 0,
TEAM_FIELDING_DP = 0
))
df_train_rm<- na.omit(df_train)
df_evaluation_rm<- na.omit(df_evaluation)
